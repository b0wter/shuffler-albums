# This is a basic workflow to help you get started with Actions

name: Refresh artist and album data

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
  - cron: "15 12 * * 5"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: ./refresh_all_data "$SPOTIFY_CLIENT_ID" "$SPOTIFY_CLIENT_SECRET" "$SPOTIFY_ARTIST_IDS"
        env:
          SPOTIFY_ARTIST_IDS: ${{ vars.SPOTIFY_ARTIST_IDS }}
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}

      # Runs a set of commands using the runners shell
      - name: Commit changes
        run: |
          tree
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          if [[ `git status --porcelain` ]]; then
            git commit -m "Refreshed artist and album data"
            echo "HAS_CHANGED=true" >> $GITHUB_ENV
          else
            echo "HAS_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Push changes
        if: env.HAS_CHANGED == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.WRITE_TO_REPO_TOKEN }}
          branch: ${{ github.ref }}
